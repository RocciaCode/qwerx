name: Qwerx CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  JAVA_VERSION: '21'
  NODE_VERSION: '20'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: qwerxdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📢 Notify Discord - Pipeline Started
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "🚀 Pipeline for Qwerx started on branch `${{ github.ref_name }}`"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🌐 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🧰 Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: 🛠️ Build backend (Spring Boot)
        working-directory: ./qwerx-backend
        run: mvn clean install -DskipTests | tee $GITHUB_WORKSPACE/qwerx-error.log

      - name: 🧱 Build frontend (Angular)
        working-directory: ./qwerx-frontend
        run: |
          npm ci | tee -a $GITHUB_WORKSPACE/qwerx-error.log
          npm run build -- --base-href /qwerx-frontend/ | tee -a $GITHUB_WORKSPACE/qwerx-error.log

      - name: 🧱 Build frontend (Angular) for GitHub Pages
        run: |
            npm ci
            npm run build:pages

      - name: 🧪 Run backend tests
        working-directory: ./qwerx-backend
        run: mvn test | tee -a $GITHUB_WORKSPACE/qwerx-error.log

      - name: 🐳 Install Docker Compose (manual fallback)
        run: |
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: 🐳 Build Docker images
        run: docker-compose -f ./qwerx-infra/docker-compose.yml build | tee -a $GITHUB_WORKSPACE/qwerx-error.log

      - name: 🚀 Run Docker Compose
        run: docker-compose -f ./qwerx-infra/docker-compose.yml up -d | tee -a $GITHUB_WORKSPACE/qwerx-error.log

      - name: 📢 Notify Discord on success
        if: success()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "✅ Qwerx pipeline completed **successfully** on branch `${{ github.ref_name }}`!"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: 📢 Notify Discord on failure with logs
        if: failure()
        run: |
          echo "❌ Qwerx pipeline failed on branch `${{ github.ref_name }}`!" > err.log
          echo "🔍 Last 10 lines of log:" >> err.log
          tail -n 10 $GITHUB_WORKSPACE/qwerx-error.log >> err.log
          CONTENT=$(jq -Rs . < err.log)
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\": $CONTENT}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: 🚀 Deploy demo to GitHub Pages
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'

          mkdir temp-pages
          cp -r ./qwerx-frontend/dist/qwerx-frontend/* temp-pages/

          git checkout --orphan gh-pages
          git reset --hard
          git clean -fdx

          cp -r temp-pages/* .
          rm -rf temp-pages

          touch .nojekyll

          git add .
          git commit -m "Deploy demo to GitHub Pages"
          git push origin gh-pages --force
