name: Qwerx CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  JAVA_VERSION: '21'
  NODE_VERSION: '20'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: qwerxdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    # Notify Discord about the pipeline start
      - name: 📢 Notify Discord - Pipeline Started
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "The pipeline for Qwerx has started!"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🌐 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🧰 Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: 🛠️ Build backend (Spring Boot)
        working-directory: ./qwerx-backend
        run: mvn clean install -DskipTests

      - name: 🧱 Build frontend (Angular)
        working-directory: ./qwerx-frontend
        run: |
          npm ci
          npm run build

      - name: 🧪 Run backend tests
        working-directory: ./qwerx-backend
        run: mvn test

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: 🐳 Build Docker images
        run: docker-compose -f ./qwerx-infra/docker-compose.yml build

      - name: 🚀 Run Docker Compose
        run: docker-compose -f ./qwerx-infra/docker-compose.yml up -d

      # Send success notification to Discord
      - name: 📢 Notify Discord on success
        if: success()  # This ensures notification is sent on success
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "Build and deploy completed successfully for the Qwerx project!"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      # Send failure notification to Discord
      - name: 📢 Notify Discord on failure
        if: failure()  # This ensures notification is sent on failure
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "Build and deploy failed for the Qwerx project!"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
            # Deploy to GitHub Pages
      - name: 🚀 Deploy demo to GitHub Pages
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'

          mkdir temp-pages
          cp -r ./qwerx-frontend/dist/qwerx-frontend/* temp-pages/

          git checkout --orphan gh-pages
          git reset --hard
          git clean -fdx

          cp -r temp-pages/* .
          rm -rf temp-pages

          touch .nojekyll

          git add .
          git commit -m "Deploy demo to GitHub Pages"
          git push origin gh-pages --force
